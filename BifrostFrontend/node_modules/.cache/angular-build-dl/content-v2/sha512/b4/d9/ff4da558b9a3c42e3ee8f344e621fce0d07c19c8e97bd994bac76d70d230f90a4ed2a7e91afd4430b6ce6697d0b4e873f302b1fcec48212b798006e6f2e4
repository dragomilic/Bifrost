{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/Componentes/Navbar/Navbar.component.ts","./src/Componentes/Navbar/Navbar.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Navbar',\n  templateUrl: './Navbar.component.html',\n  styleUrls: ['./Navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nav class=\"nav grey lighten-4 py-4\">\n    <a class=\"nav-link active\" [routerLink]=\"['Proyectos']\">Active</a>\n    <a class=\"nav-link\" href=\"#\">Link</a>\n    <a class=\"nav-link\" href=\"#\">Link</a>\n    <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\n</nav>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'BifrostFrontend';\n}","<app-Navbar></app-Navbar>\n<br>\n<div class=\"row justify-content-center\">\n   <mdb-card class=\"col-10\">\n        <mdb-card-body>\n                <router-outlet></router-outlet>\n        </mdb-card-body>\n    </mdb-card>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from '../Componentes/Navbar/Navbar.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst routes: Routes = [\n  {\n      path: '',\n      pathMatch: 'full',\n      redirectTo: '/',\n  },\n  {\n      path: 'Proyectos',\n      loadChildren: () =>\n          import('../ModAdmin/Proyectos/Proyectos.module').then(m => m.ProyectosModule),\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(\n      routes,\n      {enableTracing: true}\n    ),\n    MDBBootstrapModule.forRoot(),\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}