import { EventEmitter, OnInit } from '@angular/core';
import { DatepickerService } from './datepicker.service';
import { DateObj } from './datepicker.interface';
import * as ɵngcc0 from '@angular/core';
export declare class DatepickerComponent implements OnInit {
    private datepickerSvc;
    selected: EventEmitter<{}>;
    mode: string;
    format: string;
    labelText: string;
    items: ({
        url: string;
        text: string;
        isDivider: boolean;
    } | {
        url: string;
        text: string;
        isDivider?: undefined;
    })[];
    daysList: (any[] | any[] | any[] | any[] | any[] | any[])[];
    selectedDateTime: DateObj;
    defaultLocaleWeekdaysShort: string[];
    range: any;
    selectedDate: string;
    showCal: boolean;
    constructor(datepickerSvc: DatepickerService);
    ngOnInit(): void;
    isWithinRange(day: any): boolean;
    getSelectedClass(day: any): {
        'c-datepicker__day--selected': boolean;
    };
    setDate(day: any): void;
    prevMonth(): void;
    nextMonth(): void;
    clear(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DatepickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DatepickerComponent, "ui-datepicker", never, { "mode": "mode"; "labelText": "labelText"; "format": "format"; }, { "selected": "selected"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZGF0ZXBpY2tlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGF0ZXBpY2tlclNlcnZpY2UgfSBmcm9tICcuL2RhdGVwaWNrZXIuc2VydmljZSc7XHJcbmltcG9ydCB7IERhdGVPYmogfSBmcm9tICcuL2RhdGVwaWNrZXIuaW50ZXJmYWNlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0ZXBpY2tlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBwcml2YXRlIGRhdGVwaWNrZXJTdmM7XHJcbiAgICBzZWxlY3RlZDogRXZlbnRFbWl0dGVyPHt9PjtcclxuICAgIG1vZGU6IHN0cmluZztcclxuICAgIGZvcm1hdDogc3RyaW5nO1xyXG4gICAgbGFiZWxUZXh0OiBzdHJpbmc7XHJcbiAgICBpdGVtczogKHtcclxuICAgICAgICB1cmw6IHN0cmluZztcclxuICAgICAgICB0ZXh0OiBzdHJpbmc7XHJcbiAgICAgICAgaXNEaXZpZGVyOiBib29sZWFuO1xyXG4gICAgfSB8IHtcclxuICAgICAgICB1cmw6IHN0cmluZztcclxuICAgICAgICB0ZXh0OiBzdHJpbmc7XHJcbiAgICAgICAgaXNEaXZpZGVyPzogdW5kZWZpbmVkO1xyXG4gICAgfSlbXTtcclxuICAgIGRheXNMaXN0OiAoYW55W10gfCBhbnlbXSB8IGFueVtdIHwgYW55W10gfCBhbnlbXSB8IGFueVtdKVtdO1xyXG4gICAgc2VsZWN0ZWREYXRlVGltZTogRGF0ZU9iajtcclxuICAgIGRlZmF1bHRMb2NhbGVXZWVrZGF5c1Nob3J0OiBzdHJpbmdbXTtcclxuICAgIHJhbmdlOiBhbnk7XHJcbiAgICBzZWxlY3RlZERhdGU6IHN0cmluZztcclxuICAgIHNob3dDYWw6IGJvb2xlYW47XHJcbiAgICBjb25zdHJ1Y3RvcihkYXRlcGlja2VyU3ZjOiBEYXRlcGlja2VyU2VydmljZSk7XHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xyXG4gICAgaXNXaXRoaW5SYW5nZShkYXk6IGFueSk6IGJvb2xlYW47XHJcbiAgICBnZXRTZWxlY3RlZENsYXNzKGRheTogYW55KToge1xyXG4gICAgICAgICdjLWRhdGVwaWNrZXJfX2RheS0tc2VsZWN0ZWQnOiBib29sZWFuO1xyXG4gICAgfTtcclxuICAgIHNldERhdGUoZGF5OiBhbnkpOiB2b2lkO1xyXG4gICAgcHJldk1vbnRoKCk6IHZvaWQ7XHJcbiAgICBuZXh0TW9udGgoKTogdm9pZDtcclxuICAgIGNsZWFyKCk6IHZvaWQ7XHJcbn1cclxuIl19